//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.13

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user_settings")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub user_id: i64,
    pub auto_publish_enabled: bool,
    pub default_license_id: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::user_licenses::Entity",
        from = "Column::DefaultLicenseId",
        to = "super::user_licenses::Column::Id",
        on_update = "NoAction",
        on_delete = "SetNull"
    )]
    UserLicenses,
}

impl Related<super::user_licenses::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserLicenses.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
